// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// TODO migrate to database
model Admin {
  id Int @id @default(autoincrement())
  email String
  password String
  userName String
  isAdmin Boolean @default(true)
}

// MANY ORDERS AND PRODUCTS
model Customer {
  id Int @id @default(autoincrement())
  email String @unique
  sub String
  address String
  orders Order[]
  basket Product[]
}

// ONE CUSTOMER PER ORDER, MANY ITEMS PER ORDER
model Order {
  id Int @id @default(autoincrement())
  fulfilled Boolean @default(false)
  products Product[]
  totalPrice Float
  customer Customer? @relation(fields: [customerId], references: [id])
  customerId Int
  createdAt DateTime @default(now())
  shippedAt DateTime?
}

// MANY ORDERS PER PRODUCT AND IN THE BASKET OF MANY CUSTOMERS
model Product {
  id Int @id @default(autoincrement())
  pictures String[]
  title String @unique
  price Float
  description String
  orders Order[]
  customers Customer[]
  colour Colour?
  scents String[]
}

enum Colour {
  Black
  Blue
  Cream
  Green
  Grey
  Orange
  Pink
  Purple
  Red
  White
  Yellow
}


// MANY TO MANY RELATION WITH RELATION TABLE
// model Product {
//   id Int @id @default(autoincrement())
//   pictures String[]
//   price Float
//   description String?
//   title String @unique
//   orders Order[]
//   customers Customer[]
//   colours ProductColours[]
// }

// model ProductColours {
//   colour Colour @relation(fields: [colourId], references: [id])
//   colourId Int
//   product Product @relation(fields: [productId], references: [id])
//   productId Int
//   @@id([productId, colourId])
// }

// model Colour {
//   id Int @id @default(autoincrement())
//   colour String @unique
//   products ProductColours[]
//   scents String[]
// }

// TODO define reviews model
